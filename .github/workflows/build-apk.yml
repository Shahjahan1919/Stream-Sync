name: Android production apk build

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MYAPP_UPLOAD_KEYSTORE: ${{ secrets.MYAPP_UPLOAD_KEYSTORE }}
      MYAPP_GRADLE_CONFIG: ${{ secrets.MYAPP_GRADLE_CONFIG }}
      MYAPP_GOOGLE_SERVICES: ${{ secrets.MYAPP_GOOGLE_SERVICES }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11

      - name: Restore cached gradle dependencies 
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
  

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Gradle permissions
        run: |
          cd android
          chmod +x gradlew
          cd ..
          
      - name: Set up Gradle variables
        run: |
          mkdir -p ~/.gradle
          cat <<EOL > ~/.gradle/gradle.properties
          $MYAPP_GRADLE_CONFIG
          EOL
          cat <<EOL > android/app/google-services.json
          $MYAPP_GOOGLE_SERVICES
          EOL
          cat ~/.gradle/gradle.properties
          cat android/app/google-services.json
      
      - name: Restore cached yarn dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
  
      - name: Install yarn dependencies
        run: |
          yarn --frozen-lockfile

      # - name: Restore Release Keystore
      #   run: |
      #     echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
      #     echo "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" | gpg --batch --passphrase-fd 0 release.keystore.asc > android/app/release.keystore
        
      - name: check info
        run: |
          ls -la android/app/

      - name: Build apk and aab
        run: |
          yarn run android:clean
          yarn run android:build
          yarn run android:bundle

      - name: Upload apk and aab as artifact
        uses: actions/upload-artifact@v3
        with:
          name: apk-release
          path: |
            android/app/build/outputs/apk/release/app-release.apk
            android/app/build/outputs/bundle/release/app-release.aab

